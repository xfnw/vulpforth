: if ( -- a ) \ turns into ( b -- )
	lit gotz , lit@ here 0 , ; immediate
: !if ( -- a ) \ turns into ( b -- )
	lit gonz , lit@ here 0 , ; immediate
: else ( a -- a )
	lit goto , lit@ here 0 ,
	dup 4+ rot ! ; immediate
: then ( a -- )
	lit@ here swap ! ; immediate

: begin ( -- a )
	lit@ here ; immediate
: while ( a -- ) \ turns into ( b -- )
	lit gonz , , ; immediate
: until ( a -- ) \ turns into ( b -- )
	lit gotz , , ; immediate

: [then] ( -- ) ;
: [if] ( b -- )
	!if begin word
	lit [ ' [then] dictname swap , ] lit [ , ]
	str= until then ;

: sigcatch ( -- )
	0 lit abort 11 48 syscall
	lit abort 2 48 syscall drop ;

create pipebuf 128 alloc
: pipe ( i o -- )
	begin 128 2over lit pipebuf swap 3 syscall
	dup 0 > !if 2drop drop return then
	over lit pipebuf swap 4 syscall
	0 > while 2drop ;
: cat ( -- )
	0 word open dup 1 pipe close ;
